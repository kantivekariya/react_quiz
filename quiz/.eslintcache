[{"/home/albiorix/workspace/xongolab/quiz/src/index.js":"1","/home/albiorix/workspace/xongolab/quiz/src/reportWebVitals.js":"2","/home/albiorix/workspace/xongolab/quiz/src/App.jsx":"3","/home/albiorix/workspace/xongolab/quiz/src/routes/index.js":"4","/home/albiorix/workspace/xongolab/quiz/src/login/Login.jsx":"5","/home/albiorix/workspace/xongolab/quiz/src/registration/Registration.jsx":"6","/home/albiorix/workspace/xongolab/quiz/src/redux/store/configureStore.js":"7","/home/albiorix/workspace/xongolab/quiz/src/redux/store/configureStore.dev.js":"8","/home/albiorix/workspace/xongolab/quiz/src/redux/reducers/index.js":"9","/home/albiorix/workspace/xongolab/quiz/src/redux/reducers/authReducer.js":"10","/home/albiorix/workspace/xongolab/quiz/src/redux/actions/actionType.js":"11","/home/albiorix/workspace/xongolab/quiz/src/utils/localStorage.js":"12","/home/albiorix/workspace/xongolab/quiz/src/redux/actions/auth/authentication.js":"13","/home/albiorix/workspace/xongolab/quiz/src/routes/Public.jsx":"14","/home/albiorix/workspace/xongolab/quiz/src/routes/Routes.jsx":"15","/home/albiorix/workspace/xongolab/quiz/src/routes/Loader.jsx":"16","/home/albiorix/workspace/xongolab/quiz/src/routes/Private.jsx":"17","/home/albiorix/workspace/xongolab/quiz/src/pagenot-found/PageNotFound.jsx":"18","/home/albiorix/workspace/xongolab/quiz/src/dashboard/Dashboard.jsx":"19","/home/albiorix/workspace/xongolab/quiz/src/utils/axios-config.js":"20","/home/albiorix/workspace/xongolab/quiz/src/utils/helper.js":"21","/home/albiorix/workspace/xongolab/quiz/src/config/Config.js":"22"},{"size":449,"mtime":1608223752905,"results":"23","hashOfConfig":"24"},{"size":364,"mtime":1608212004679,"results":"25","hashOfConfig":"24"},{"size":508,"mtime":1608233190925,"results":"26","hashOfConfig":"24"},{"size":1502,"mtime":1608271570501,"results":"27","hashOfConfig":"24"},{"size":2913,"mtime":1608270737241,"results":"28","hashOfConfig":"24"},{"size":11171,"mtime":1608268028779,"results":"29","hashOfConfig":"24"},{"size":161,"mtime":1608222126187,"results":"30","hashOfConfig":"24"},{"size":677,"mtime":1608223753049,"results":"31","hashOfConfig":"24"},{"size":273,"mtime":1608226532996,"results":"32","hashOfConfig":"24"},{"size":1107,"mtime":1608271062862,"results":"33","hashOfConfig":"24"},{"size":684,"mtime":1608223752925,"results":"34","hashOfConfig":"24"},{"size":1362,"mtime":1608272126478,"results":"35","hashOfConfig":"24"},{"size":2911,"mtime":1608272309982,"results":"36","hashOfConfig":"24"},{"size":255,"mtime":1608228807825,"results":"37","hashOfConfig":"24"},{"size":806,"mtime":1608272902606,"results":"38","hashOfConfig":"24"},{"size":322,"mtime":1608228807729,"results":"39","hashOfConfig":"24"},{"size":590,"mtime":1608231954879,"results":"40","hashOfConfig":"24"},{"size":528,"mtime":1608228936737,"results":"41","hashOfConfig":"24"},{"size":621,"mtime":1608272640617,"results":"42","hashOfConfig":"24"},{"size":1769,"mtime":1608272837045,"results":"43","hashOfConfig":"24"},{"size":676,"mtime":1608225996160,"results":"44","hashOfConfig":"24"},{"size":241,"mtime":1608272275496,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"13nui9i",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/albiorix/workspace/xongolab/quiz/src/index.js",[],["92","93"],"/home/albiorix/workspace/xongolab/quiz/src/reportWebVitals.js",[],"/home/albiorix/workspace/xongolab/quiz/src/App.jsx",[],"/home/albiorix/workspace/xongolab/quiz/src/routes/index.js",[],"/home/albiorix/workspace/xongolab/quiz/src/login/Login.jsx",[],"/home/albiorix/workspace/xongolab/quiz/src/registration/Registration.jsx",["94"],"import React, { useState } from 'react';\nimport { Button, Form, Input, Radio, DatePicker, Upload, Select, Checkbox, notification } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { userSignup } from '../redux/actions/auth/authentication';\n\nconst FormItem = Form.Item;\nconst { Option } = Select;\n\nconst Registration = (props) => {\n    const [form] = Form.useForm();\n    const dispatch = useDispatch();\n\n    const normFile = (e) => {\n        console.log('Upload event:', e);\n        if (Array.isArray(e)) {\n            return e;\n        }\n\n        return e && e.fileList;\n    };\n\n\n    const onFinish = (values) => {\n        console.log(\"values\", values)\n        dispatch(userSignup(values))\n            .then((res) => {\n                notification.success({\n                    message: 'Signup Success',\n                    description: 'Signup Success',\n                });\n                props.history.push('/');\n            })\n            .catch((err) => {\n                console.log('checkUserSignup err', err);\n            });\n    }\n    return (\n        <>\n            <div className=\"auth d-md-flex align-items-center register-page\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-8 col-lg-8 col-xl-8 auth-right bg-white\">\n                            <h2 className=\"text-primary h4 text-center\">Registration</h2>\n                            <Form form={form} name=\"form\" onFinish={onFinish}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6 form-group\">\n                                        <label >First Name</label>\n                                        <FormItem name=\"firstname\" rules={[{ required: true, message: 'Firstname is required!' }]}>\n                                            <Input className=\"form-control\" placeholder=\"Fist Name\" />\n                                        </FormItem>\n                                    </div>\n                                    <div className=\"col-md-6 form-group\">\n                                        <label className=\"\">Last Name</label>\n                                        <FormItem name=\"lastname\" rules={[{ required: true, message: 'Lastname is required!' }]}>\n                                            <Input className=\"form-control\" placeholder=\"Last Name\" />\n                                        </FormItem>\n                                    </div>\n                                    <div className=\"col-md-6 form-group\">\n                                        <label className=\"\">Email</label>\n                                        <FormItem name=\"email\" rules={[{ required: true, message: 'Email is required!' }]}>\n                                            <Input className=\"form-control\" placeholder=\"Email\" />\n                                        </FormItem>\n                                    </div>\n                                    <div className=\"col-md-6 form-group\">\n                                        <label className=\"\">Mobile No</label>\n                                        <FormItem name=\"mobileno\" rules={[{ required: true, message: 'Mobile no is required!' }]}>\n                                            <Input className=\"form-control\" placeholder=\"Mobile No\" />\n                                        </FormItem>\n                                    </div>\n                                    <div className=\"col-md-6 form-group\">\n                                        <label className=\"\">Passowrd</label>\n                                        <FormItem name=\"password\" rules={[{ required: true, message: 'Password is required!' }]}>\n                                            <Input className=\"form-control\" type=\"password\" placeholder=\"Password\" />\n                                        </FormItem>\n                                    </div>\n                                    <div className=\"col-md-6 form-group\">\n                                        <label className=\"\">Confirm Password</label>\n                                        <FormItem name=\"confirmpwd\" rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please confirm your password!',\n                                            },\n                                            ({ getFieldValue }) => ({\n                                                validator(rule, value) {\n                                                    if (!value || getFieldValue('password') === value) {\n                                                        return Promise.resolve();\n                                                    }\n                                                    return Promise.reject('The two passwords that you entered do not match!');\n                                                },\n                                            }),\n                                        ]}>\n                                            <Input className=\"form-control\" placeholder=\"Confirm Password\" />\n                                        </FormItem>\n                                    </div>\n                                    <div className=\"col-md-6 form-group\">\n                                        <label className=\"\">Gender</label>\n                                        <FormItem name=\"gender\" rules={[{ required: true, message: 'Gender is required!' }]}>\n                                            <Radio.Group>\n                                                <Radio className=\"\" value=\"male\">Male</Radio>\n                                                <Radio className=\"\" value=\"female\">Femaile</Radio>\n                                            </Radio.Group>\n                                        </FormItem>\n                                    </div>\n                                    <div className=\"col-md-6 form-group\">\n                                        <label className=\"\">Photo</label>\n                                        <FormItem\n                                            name=\"upload\"\n                                            valuePropName=\"fileList\"\n                                            getValueFromEvent={normFile}\n                                        >\n                                            <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n                                                <Button className=\"form-control\" icon={<UploadOutlined />}>Click to upload</Button>\n                                            </Upload>\n                                        </FormItem>\n                                    </div>\n                                    <div className=\"col-md-6 form-group\">\n                                        <label className=\"\">Country</label>\n                                        <FormItem name=\"country\" rules={[{ required: true, message: 'Country is required!' }]}>\n                                            <Select className=\"default-select\" allowClear placeholder=\"Select Country\">\n                                                <Option value=\"1\">Option 1</Option>\n                                                <Option value=\"2\">Option 2</Option>\n                                                <Option value=\"3\">Option 3</Option>\n                                            </Select>\n                                        </FormItem>\n                                    </div>\n                                    <div className=\"col-md-6 form-group\">\n                                        <label className=\"\">State</label>\n                                        <FormItem name=\"state\" rules={[{ required: true, message: 'State is required!' }]}>\n                                            <Select className=\"default-select\" allowClear placeholder=\"Select State\">\n                                                <Option value=\"1\">Option 1</Option>\n                                                <Option value=\"2\">Option 2</Option>\n                                                <Option value=\"3\">Option 3</Option>\n                                            </Select>\n                                        </FormItem>\n                                    </div>\n                                    <div className=\"col-md-6 form-group\">\n                                        <label className=\"\">City</label>\n                                        <FormItem name=\"city\" rules={[{ required: true, message: 'City is required!' }]}>\n                                            <Select className=\"default-select\" allowClear placeholder=\"Select City\">\n                                                <Option value=\"1\">Option 1</Option>\n                                                <Option value=\"2\">Option 2</Option>\n                                                <Option value=\"3\">Option 3</Option>\n                                            </Select>\n                                        </FormItem>\n                                    </div>\n                                    <div className=\"col-md-6 form-group\">\n                                        <label className=\"\">DOB</label>\n                                        <FormItem name=\"dob\" rules={[{ required: true, message: 'DOB is required!' }]}>\n                                            <DatePicker className=\"form-control\" placeholder=\"DOB\" />\n                                        </FormItem>\n                                    </div>\n                                    <div className=\"col-md-12  form-group\">\n                                        <label className=\"\">Hobbies</label>\n                                        <FormItem name=\"hobbies\" rules={[{ required: true, message: 'Hobbies is required!' }]}>\n                                            <Checkbox.Group>\n                                                <Checkbox value=\"playing_cricket\">Playing Cricket</Checkbox>\n                                                <Checkbox value=\"swimmings\">Swimmings</Checkbox>\n                                                <Checkbox value=\"traveling\">Traveling</Checkbox>\n                                            </Checkbox.Group>\n                                        </FormItem>\n                                    </div>\n                                    <FormItem className=\"col-md-12 mt-4 text-center\">\n                                        <Button htmlType=\"submit\" className=\"btn btn-secondary\">Registration</Button>\n                                    </FormItem>\n                                </div>\n                            </Form>\n                            <p className=\"text-center mt-3\">Already have an account?<Link to={`/`} className=\"ml-1 pt-3\">Login Here</Link></p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Registration;","/home/albiorix/workspace/xongolab/quiz/src/redux/store/configureStore.js",[],"/home/albiorix/workspace/xongolab/quiz/src/redux/store/configureStore.dev.js",[],"/home/albiorix/workspace/xongolab/quiz/src/redux/reducers/index.js",[],"/home/albiorix/workspace/xongolab/quiz/src/redux/reducers/authReducer.js",[],"/home/albiorix/workspace/xongolab/quiz/src/redux/actions/actionType.js",[],"/home/albiorix/workspace/xongolab/quiz/src/utils/localStorage.js",[],"/home/albiorix/workspace/xongolab/quiz/src/redux/actions/auth/authentication.js",[],"/home/albiorix/workspace/xongolab/quiz/src/routes/Public.jsx",[],"/home/albiorix/workspace/xongolab/quiz/src/routes/Routes.jsx",["95"],"/home/albiorix/workspace/xongolab/quiz/src/routes/Loader.jsx",[],"/home/albiorix/workspace/xongolab/quiz/src/routes/Private.jsx",[],"/home/albiorix/workspace/xongolab/quiz/src/pagenot-found/PageNotFound.jsx",[],"/home/albiorix/workspace/xongolab/quiz/src/dashboard/Dashboard.jsx",[],"/home/albiorix/workspace/xongolab/quiz/src/utils/axios-config.js",[],"/home/albiorix/workspace/xongolab/quiz/src/utils/helper.js",[],"/home/albiorix/workspace/xongolab/quiz/src/config/Config.js",["96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"105","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":11,"column":1,"nodeType":"108","endLine":14,"endColumn":3},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'lazy' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]